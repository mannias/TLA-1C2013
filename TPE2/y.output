Grammar

    0 $accept: head $end

    1 head: vtype vname bopen variables bclose open body return close

    2 body: body assignation
    3     | body loop statements
    4     | body simpleop
    5     | assignation
    6     | loop statements
    7     | simpleop

    8 return: RETURN NAME
    9       | RETURN NUMBER

   10 assignation: NAME '=' expression
   11            | VARTYPE NAME '=' expression
   12            | VARTYPE NAME

   13 expression: '(' expression '+' expression ')'
   14           | '(' expression '-' expression ')'
   15           | '(' expression '/' expression ')'
   16           | '(' expression '*' expression ')'
   17           | '(' expression '%' expression ')'
   18           | MILL expression
   19           | NUMBER
   20           | NAME

   21 condition: '(' expression EQQ expression ')'
   22          | '(' expression '>' expression ')'
   23          | '(' expression '<' expression ')'
   24          | '(' expression NEQ expression ')'

   25 loop: IF condition
   26     | WHILE condition

   27 simpleop: NAME SUMM
   28         | NAME LESS

   29 variables: VARTYPE NAME
   30          | VARTYPE NAME ','
   31          | /* empty */

   32 statements: open body close

   33 open: '{'

   34 close: '}'

   35 bopen: '('

   36 bclose: ')'

   37 vtype: VARTYPE

   38 vname: NAME


Terminals, with rules where they appear

$end (0) 0
'%' (37) 17
'(' (40) 13 14 15 16 17 21 22 23 24 35
')' (41) 13 14 15 16 17 21 22 23 24 36
'*' (42) 16
'+' (43) 13
',' (44) 30
'-' (45) 14
'/' (47) 15
'<' (60) 23
'=' (61) 10 11
'>' (62) 22
'{' (123) 33
'}' (125) 34
error (256)
NAME (258) 8 10 11 12 20 27 28 29 30 38
EQQ (259) 21
SUMM (260) 27
NUMBER (261) 9 19
NEQ (262) 24
RETURN (263) 8 9
LESS (264) 28
MILL (265) 18
VARTYPE (266) 11 12 29 30 37
IF (267) 25
WHILE (268) 26


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
head (28)
    on left: 1, on right: 0
body (29)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4 32
return (30)
    on left: 8 9, on right: 1
assignation (31)
    on left: 10 11 12, on right: 2 5
expression (32)
    on left: 13 14 15 16 17 18 19 20, on right: 10 11 13 14 15 16 17
    18 21 22 23 24
condition (33)
    on left: 21 22 23 24, on right: 25 26
loop (34)
    on left: 25 26, on right: 3 6
simpleop (35)
    on left: 27 28, on right: 4 7
variables (36)
    on left: 29 30 31, on right: 1
statements (37)
    on left: 32, on right: 3 6
open (38)
    on left: 33, on right: 1 32
close (39)
    on left: 34, on right: 1 32
bopen (40)
    on left: 35, on right: 1
bclose (41)
    on left: 36, on right: 1
vtype (42)
    on left: 37, on right: 1
vname (43)
    on left: 38, on right: 1


state 0

    0 $accept: . head $end

    VARTYPE  shift, and go to state 1

    head   go to state 2
    vtype  go to state 3


state 1

   37 vtype: VARTYPE .

    $default  reduce using rule 37 (vtype)


state 2

    0 $accept: head . $end

    $end  shift, and go to state 4


state 3

    1 head: vtype . vname bopen variables bclose open body return close

    NAME  shift, and go to state 5

    vname  go to state 6


state 4

    0 $accept: head $end .

    $default  accept


state 5

   38 vname: NAME .

    $default  reduce using rule 38 (vname)


state 6

    1 head: vtype vname . bopen variables bclose open body return close

    '('  shift, and go to state 7

    bopen  go to state 8


state 7

   35 bopen: '(' .

    $default  reduce using rule 35 (bopen)


state 8

    1 head: vtype vname bopen . variables bclose open body return close

    VARTYPE  shift, and go to state 9

    $default  reduce using rule 31 (variables)

    variables  go to state 10


state 9

   29 variables: VARTYPE . NAME
   30          | VARTYPE . NAME ','

    NAME  shift, and go to state 11


state 10

    1 head: vtype vname bopen variables . bclose open body return close

    ')'  shift, and go to state 12

    bclose  go to state 13


state 11

   29 variables: VARTYPE NAME .
   30          | VARTYPE NAME . ','

    ','  shift, and go to state 14

    $default  reduce using rule 29 (variables)


state 12

   36 bclose: ')' .

    $default  reduce using rule 36 (bclose)


state 13

    1 head: vtype vname bopen variables bclose . open body return close

    '{'  shift, and go to state 15

    open  go to state 16


state 14

   30 variables: VARTYPE NAME ',' .

    $default  reduce using rule 30 (variables)


state 15

   33 open: '{' .

    $default  reduce using rule 33 (open)


state 16

    1 head: vtype vname bopen variables bclose open . body return close

    NAME     shift, and go to state 17
    VARTYPE  shift, and go to state 18
    IF       shift, and go to state 19
    WHILE    shift, and go to state 20

    body         go to state 21
    assignation  go to state 22
    loop         go to state 23
    simpleop     go to state 24


state 17

   10 assignation: NAME . '=' expression
   27 simpleop: NAME . SUMM
   28         | NAME . LESS

    SUMM  shift, and go to state 25
    LESS  shift, and go to state 26
    '='   shift, and go to state 27


state 18

   11 assignation: VARTYPE . NAME '=' expression
   12            | VARTYPE . NAME

    NAME  shift, and go to state 28


state 19

   25 loop: IF . condition

    '('  shift, and go to state 29

    condition  go to state 30


state 20

   26 loop: WHILE . condition

    '('  shift, and go to state 29

    condition  go to state 31


state 21

    1 head: vtype vname bopen variables bclose open body . return close
    2 body: body . assignation
    3     | body . loop statements
    4     | body . simpleop

    NAME     shift, and go to state 17
    RETURN   shift, and go to state 32
    VARTYPE  shift, and go to state 18
    IF       shift, and go to state 19
    WHILE    shift, and go to state 20

    return       go to state 33
    assignation  go to state 34
    loop         go to state 35
    simpleop     go to state 36


state 22

    5 body: assignation .

    $default  reduce using rule 5 (body)


state 23

    6 body: loop . statements

    '{'  shift, and go to state 15

    statements  go to state 37
    open        go to state 38


state 24

    7 body: simpleop .

    $default  reduce using rule 7 (body)


state 25

   27 simpleop: NAME SUMM .

    $default  reduce using rule 27 (simpleop)


state 26

   28 simpleop: NAME LESS .

    $default  reduce using rule 28 (simpleop)


state 27

   10 assignation: NAME '=' . expression

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 43


state 28

   11 assignation: VARTYPE NAME . '=' expression
   12            | VARTYPE NAME .

    '='  shift, and go to state 44

    $default  reduce using rule 12 (assignation)


state 29

   21 condition: '(' . expression EQQ expression ')'
   22          | '(' . expression '>' expression ')'
   23          | '(' . expression '<' expression ')'
   24          | '(' . expression NEQ expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 45


state 30

   25 loop: IF condition .

    $default  reduce using rule 25 (loop)


state 31

   26 loop: WHILE condition .

    $default  reduce using rule 26 (loop)


state 32

    8 return: RETURN . NAME
    9       | RETURN . NUMBER

    NAME    shift, and go to state 46
    NUMBER  shift, and go to state 47


state 33

    1 head: vtype vname bopen variables bclose open body return . close

    '}'  shift, and go to state 48

    close  go to state 49


state 34

    2 body: body assignation .

    $default  reduce using rule 2 (body)


state 35

    3 body: body loop . statements

    '{'  shift, and go to state 15

    statements  go to state 50
    open        go to state 38


state 36

    4 body: body simpleop .

    $default  reduce using rule 4 (body)


state 37

    6 body: loop statements .

    $default  reduce using rule 6 (body)


state 38

   32 statements: open . body close

    NAME     shift, and go to state 17
    VARTYPE  shift, and go to state 18
    IF       shift, and go to state 19
    WHILE    shift, and go to state 20

    body         go to state 51
    assignation  go to state 22
    loop         go to state 23
    simpleop     go to state 24


state 39

   20 expression: NAME .

    $default  reduce using rule 20 (expression)


state 40

   19 expression: NUMBER .

    $default  reduce using rule 19 (expression)


state 41

   18 expression: MILL . expression

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 52


state 42

   13 expression: '(' . expression '+' expression ')'
   14           | '(' . expression '-' expression ')'
   15           | '(' . expression '/' expression ')'
   16           | '(' . expression '*' expression ')'
   17           | '(' . expression '%' expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 53


state 43

   10 assignation: NAME '=' expression .

    $default  reduce using rule 10 (assignation)


state 44

   11 assignation: VARTYPE NAME '=' . expression

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 54


state 45

   21 condition: '(' expression . EQQ expression ')'
   22          | '(' expression . '>' expression ')'
   23          | '(' expression . '<' expression ')'
   24          | '(' expression . NEQ expression ')'

    EQQ  shift, and go to state 55
    NEQ  shift, and go to state 56
    '>'  shift, and go to state 57
    '<'  shift, and go to state 58


state 46

    8 return: RETURN NAME .

    $default  reduce using rule 8 (return)


state 47

    9 return: RETURN NUMBER .

    $default  reduce using rule 9 (return)


state 48

   34 close: '}' .

    $default  reduce using rule 34 (close)


state 49

    1 head: vtype vname bopen variables bclose open body return close .

    $default  reduce using rule 1 (head)


state 50

    3 body: body loop statements .

    $default  reduce using rule 3 (body)


state 51

    2 body: body . assignation
    3     | body . loop statements
    4     | body . simpleop
   32 statements: open body . close

    NAME     shift, and go to state 17
    VARTYPE  shift, and go to state 18
    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    '}'      shift, and go to state 48

    assignation  go to state 34
    loop         go to state 35
    simpleop     go to state 36
    close        go to state 59


state 52

   18 expression: MILL expression .

    $default  reduce using rule 18 (expression)


state 53

   13 expression: '(' expression . '+' expression ')'
   14           | '(' expression . '-' expression ')'
   15           | '(' expression . '/' expression ')'
   16           | '(' expression . '*' expression ')'
   17           | '(' expression . '%' expression ')'

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '/'  shift, and go to state 62
    '*'  shift, and go to state 63
    '%'  shift, and go to state 64


state 54

   11 assignation: VARTYPE NAME '=' expression .

    $default  reduce using rule 11 (assignation)


state 55

   21 condition: '(' expression EQQ . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 65


state 56

   24 condition: '(' expression NEQ . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 66


state 57

   22 condition: '(' expression '>' . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 67


state 58

   23 condition: '(' expression '<' . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 68


state 59

   32 statements: open body close .

    $default  reduce using rule 32 (statements)


state 60

   13 expression: '(' expression '+' . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 69


state 61

   14 expression: '(' expression '-' . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 70


state 62

   15 expression: '(' expression '/' . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 71


state 63

   16 expression: '(' expression '*' . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 72


state 64

   17 expression: '(' expression '%' . expression ')'

    NAME    shift, and go to state 39
    NUMBER  shift, and go to state 40
    MILL    shift, and go to state 41
    '('     shift, and go to state 42

    expression  go to state 73


state 65

   21 condition: '(' expression EQQ expression . ')'

    ')'  shift, and go to state 74


state 66

   24 condition: '(' expression NEQ expression . ')'

    ')'  shift, and go to state 75


state 67

   22 condition: '(' expression '>' expression . ')'

    ')'  shift, and go to state 76


state 68

   23 condition: '(' expression '<' expression . ')'

    ')'  shift, and go to state 77


state 69

   13 expression: '(' expression '+' expression . ')'

    ')'  shift, and go to state 78


state 70

   14 expression: '(' expression '-' expression . ')'

    ')'  shift, and go to state 79


state 71

   15 expression: '(' expression '/' expression . ')'

    ')'  shift, and go to state 80


state 72

   16 expression: '(' expression '*' expression . ')'

    ')'  shift, and go to state 81


state 73

   17 expression: '(' expression '%' expression . ')'

    ')'  shift, and go to state 82


state 74

   21 condition: '(' expression EQQ expression ')' .

    $default  reduce using rule 21 (condition)


state 75

   24 condition: '(' expression NEQ expression ')' .

    $default  reduce using rule 24 (condition)


state 76

   22 condition: '(' expression '>' expression ')' .

    $default  reduce using rule 22 (condition)


state 77

   23 condition: '(' expression '<' expression ')' .

    $default  reduce using rule 23 (condition)


state 78

   13 expression: '(' expression '+' expression ')' .

    $default  reduce using rule 13 (expression)


state 79

   14 expression: '(' expression '-' expression ')' .

    $default  reduce using rule 14 (expression)


state 80

   15 expression: '(' expression '/' expression ')' .

    $default  reduce using rule 15 (expression)


state 81

   16 expression: '(' expression '*' expression ')' .

    $default  reduce using rule 16 (expression)


state 82

   17 expression: '(' expression '%' expression ')' .

    $default  reduce using rule 17 (expression)
